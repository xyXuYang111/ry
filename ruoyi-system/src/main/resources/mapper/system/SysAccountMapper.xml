<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.SysAccountMapper">
    
    <resultMap type="SysAccount" id="SysAccountResult">
    	<id     property="accountId"      column="account_id"      />
        <result property="accountName"    column="account_name"    />
        <result property="accountPassword"     column="account_password"     />
        <result property="platform"   column="platform"   />
        <result property="userName"   column="user_name"   />
        <result property="createBy"      column="create_by"      />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"      column="update_by"      />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>
    
    <sql id="selectAccountVo">
        select account_id, account_name, account_password, platform, create_by, create_time, update_by, update_time, remark, user_name
		from sys_account
    </sql>
    
    <!-- 查询条件 -->
	<sql id="sqlwhereSearch">
		<where>
			<if test="accountId !=null">
				and account_id = #{accountId}
			</if>
			<if test="accountPassword !=null and accountPassword != ''">
				and account_password = #{accountPassword}
			</if>
            <if test="accountName !=null and accountName != ''">
                and account_name = #{accountName}
            </if>
		</where>
	</sql>
    
    <select id="selectAccount" parameterType="SysAccount" resultMap="SysAccountResult">
        <include refid="selectAccountVo"/>
        <include refid="sqlwhereSearch"/>
    </select>
    
    <select id="selectAccountList" parameterType="SysAccount" resultMap="SysAccountResult">
        <include refid="selectAccountVo"/>
        <where>
			<if test="accountName != null and accountName != ''">
				AND account_name like concat('%', #{accountName}, '%')
			</if>
			<if test="accountPassword != null and accountPassword != ''">
				AND account_password like concat('%', #{accountPassword}, '%')
			</if>
		</where>
    </select>
    
    <select id="checkAccountKeyUnique" parameterType="String" resultMap="SysAccountResult">
        <include refid="selectAccountVo"/>
        where account_password = #{accountPassword}
    </select>
    
    <insert id="insertAccount" parameterType="SysAccount">
        insert into sys_account (
			<if test="accountName != null and accountName != '' ">account_name,</if>
			<if test="accountPassword != null and accountPassword != '' ">account_password,</if>
			<if test="platform != null and platform != '' ">platform,</if>
            <if test="userName != null and userName != '' ">user_name,</if>
			<if test="createBy != null and createBy != ''">create_by,</if>
			<if test="remark != null and remark != ''">remark,</if>
 			create_time
        )value (
			<if test="accountName != null and accountName != ''">#{accountName},</if>
			<if test="accountPassword != null and accountPassword != ''">#{accountPassword},</if>
			<if test="platform != null and platform != ''">#{platform},</if>
            <if test="userName != null and userName != '' ">#{userName},</if>
			<if test="createBy != null and createBy != ''">#{createBy},</if>
			<if test="remark != null and remark != ''">#{remark},</if>
 			now()
		)
    </insert>
	 
    <update id="updateAccount" parameterType="SysAccount">
        update sys_account
        <set>
            <if test="accountName != null and accountName != ''">account_name = #{accountName},</if>
            <if test="accountPassword != null and accountPassword != ''">account_password = #{accountPassword},</if>
            <if test="platform != null and platform != ''">platform = #{platform},</if>
            <if test="userName != null and userName != ''">user_name = #{userName},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            <if test="remark != null">remark = #{remark},</if>
 			update_time = now()
        </set>
        where account_id = #{accountId}
    </update>
	
    <delete id="deleteAccountByIds" parameterType="SysAccount">
        delete from sys_account where account_id in (${accountId})
    </delete>
    
</mapper>