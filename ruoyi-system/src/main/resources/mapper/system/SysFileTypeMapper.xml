<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.SysFileTypeMapper">

	<resultMap type="SysFileType" id="SysFileTypeResult">
		<id     property="fileTypeId"     column="file_type_id"     />
		<result property="parentId"   column="parent_id"   />
		<result property="ancestors"  column="ancestors"   />
		<result property="typeName"   column="type_Name"   />
		<result property="orderNum"   column="order_num"   />
		<result property="status"     column="status"      />
		<result property="delFlag"    column="del_flag"    />
		<result property="parentName" column="parent_name" />
		<result property="createBy"   column="create_by"   />
		<result property="createTime" column="create_time" />
		<result property="updateBy"   column="update_by"   />
		<result property="updateTime" column="update_time" />
	</resultMap>
	
	<sql id="selectFileTypeVo">
        select d.file_type_id, d.parent_id, d.ancestors, d.type_Name, d.order_num, d.status, d.del_flag, d.create_by, d.create_time
        from sys_file_type d
    </sql>
    
	<select id="selectRoleFileTypeTree" parameterType="Long" resultType="String">
		select concat(d.file_type_id, d.type_Name) as type_Name
		from sys_file_type d
			left join sys_role_dept rd on d.file_type_id = rd.file_type_id
		where d.del_flag = '0' and rd.role_id = #{roleId}
		order by d.parent_id, d.order_num
	</select>
	
	<select id="selectFileTypeList" parameterType="SysFileType" resultMap="SysFileTypeResult">
        <include refid="selectFileTypeVo"/>
        where d.del_flag = '0'
        <if test="parentId != null and parentId != 0">
			AND parent_id = #{parentId}
		</if>
		<if test="typeName != null and typeName != ''">
			AND type_Name like concat('%', #{typeName}, '%')
		</if>
		<if test="status != null and status != ''">
			AND status = #{status}
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
		order by d.parent_id, d.order_num
    </select>
	
	<select id="checkFileTypeExistUser" parameterType="Long" resultType="int">
		select count(1) from sys_user where file_type_id = #{fileTypeId} and del_flag = '0'
	</select>
	
	<select id="selectFileTypeCount" parameterType="SysFileType" resultType="int">
		select count(1) from sys_file_type
		where del_flag = '0'
		<if test="fileTypeId != null and fileTypeId != 0"> and file_type_id = #{fileTypeId} </if>
		<if test="parentId != null and parentId != 0"> and parent_id = #{parentId} </if>
	</select>
	
	<select id="checkFileTypeNameUnique" resultMap="SysFileTypeResult">
	    <include refid="selectFileTypeVo"/>
		where type_Name=#{typeName} and parent_id = #{parentId}
	</select>

	<select id="selectFileTypeById" parameterType="Long" resultMap="SysFileTypeResult">
		select d.file_type_id, d.parent_id, d.ancestors, d.type_Name, d.order_num, d.status,
			(select type_Name from sys_file_type where file_type_id = d.parent_id) parent_name
		from sys_file_type d
		where d.file_type_id = #{fileTypeId}
	</select>

	<select id="selectChildrenFileTypeById" parameterType="Long" resultMap="SysFileTypeResult">
		select * from sys_file_type where find_in_set(#{fileTypeId}, ancestors)
	</select>
	
	<insert id="insertFileType" parameterType="SysFileType">
 		insert into sys_file_type(
 			<if test="fileTypeId != null and fileTypeId != 0">file_type_id,</if>
 			<if test="parentId != null and parentId != 0">parent_id,</if>
 			<if test="typeName != null and typeName != ''">type_Name,</if>
 			<if test="ancestors != null and ancestors != ''">ancestors,</if>
 			<if test="orderNum != null and orderNum != ''">order_num,</if>
 			<if test="status != null">status,</if>
 			<if test="createBy != null and createBy != ''">create_by,</if>
 			create_time
 		)values(
 			<if test="fileTypeId != null and fileTypeId != 0">#{fileTypeId},</if>
 			<if test="parentId != null and parentId != 0">#{parentId},</if>
 			<if test="typeName != null and typeName != ''">#{typeName},</if>
 			<if test="ancestors != null and ancestors != ''">#{ancestors},</if>
 			<if test="orderNum != null and orderNum != ''">#{orderNum},</if>
 			<if test="status != null">#{status},</if>
 			<if test="createBy != null and createBy != ''">#{createBy},</if>
 			sysdate()
 		)
	</insert>
	
	<update id="updateFileType" parameterType="SysFileType">
 		update sys_file_type
 		<set>
 			<if test="parentId != null and parentId != 0">parent_id = #{parentId},</if>
 			<if test="typeName != null and typeName != ''">type_Name = #{typeName},</if>
 			<if test="ancestors != null and ancestors != ''">ancestors = #{ancestors},</if>
 			<if test="orderNum != null and orderNum != ''">order_num = #{orderNum},</if>
 			<if test="status != null and status != ''">status = #{status},</if>
 			<if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
 			update_time = sysdate()
 		</set>
 		where file_type_id = #{fileTypeId}
	</update>
	
	<update id="updateFileTypeChildren" parameterType="java.util.List">
	    update sys_file_type set ancestors =
	    <foreach collection="depts" item="item" index="index"
	        separator=" " open="case file_type_id" close="end">
	        when #{item.fileTypeId} then #{item.ancestors}
	    </foreach>
	    where file_type_id in (${fileTypeId})
	 </update>

	<delete id="deleteFileTypeById" parameterType="Long">
		update sys_file_type set del_flag = '2' where file_type_id = #{fileTypeId}
	</delete>
	
	<update id="updateFileTypeStatus" parameterType="SysFileType">
 	    update sys_file_type
 	    <set>
 	        <if test="status != null and status != ''">status = #{status},</if>
 	        <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
 	        update_time = sysdate()
        </set>
 	    where file_type_id in (${ancestors})
	</update>

</mapper> 